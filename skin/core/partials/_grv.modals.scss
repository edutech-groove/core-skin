@mixin usePrimaryModalStyle {
  border: 0 !important;
  background-color: $color01 !important;
  border-radius: $globalRadius*2 !important;
  padding: 30px 20px !important;
  position: relative;
  top: 0 !important;
  left: 0 !important;
  width: 100%;
  max-width: 600px;
  min-width: unset;
  margin: 0;
  box-shadow: none !important;
  transform: none !important;

  &.modal-lg {
    max-width: 930px;
  }
  
  &.modal-sm {
    max-width: 450px;
  }

  .modal-header {
    display: block;

    .modal-title {
      text-align: center;
      @include heading3;
    }

    button {
      position: absolute;
      padding: 0 !important;
      font-weight: 100;
      color: $textColor01;
      text-shadow: none;
      opacity: 1;
      font-size: 30px;
      top: 5px;
      right: 10px;
      margin: 0;
      border: 0;
      outline: none;
      box-shadow: none;

      .fa {
        display: block;

        &::before {
          content: '×';
        }
      }

      @include whenHover {
        color: $primaryColor1;
      }
    }
  }

  .modal-footer {
    margin-top: 10px;
  }

  .modal-header,
  .modal-body,
  .modal-footer {
    padding: 0;
    border: 0;
  }

  .close-btn,
  .close-modal {
    position: absolute;
    top: 15px;
    right: 15px;
    height: 12px;
    width: 12px;
    border: 0 !important;
    outline: none;
    padding: 0;
    background: none;

    svg {
      width: 100%;
      height: auto;
      stroke: $textColor01;
      fill: none;
      stroke-linecap: round;
      stroke-width: 2px;

      line {
        stroke: $textColor01;
        fill: none;
        stroke-linecap: round;
        stroke-width: 2px;
      }
    }

    .icon {
      font-size: 35px;
      line-height: 1;
      display: block;
      color: $textColor01;
      margin: -10px;
      @include useFont1;

      &::before {
        content: '×';
      }
    }

    @include whenHoverOnly {
      svg {
        line {
          stroke: $primaryColor1;
        }
      }

      .icon {
        color: $primaryColor1;
      }
    }
  }
}

.modal {
  background-color: transparent;
  box-shadow: none;
}

.wrapper {
  &.wrapper-modal-window {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 1061;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 15px;

    .modal-window-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: #000;
      opacity: 0.5;
    }

    .modal-window {
      @include usePrimaryModalStyle;

      .modal-header {
        padding: 0 !important;

        .modal-window-title {
          margin: 0;
          text-align: center;
          @include heading3(true);
        }
      }

      .modal-content {
        margin-left: -10px;
        margin-right: -10px;
        padding: 0 10px !important;
        height: unset;

        .modal-introduction {
          text-align: center;
          @include paragraph2(true);
          margin-bottom: 0;
        }
      }

      .modal-actions {
        padding: 0 !important;
        margin-top: 20px !important;
        text-align: center;

        ul {
          @include flexbox;
          @include align-items(center);
          @include justify-content(center);

          .action-item {
            margin: 0;

            &:not(:last-child) {
              margin-right: 15px;
            }

            .action-primary {
              @include useGrvPrimaryDarkButtonStyleLarge;
              min-width: 140px !important;
            }

            .action-secondary,
            .action-cancel {
              @include useGrvPrimaryLightButtonStyleLarge;
              min-width: 140px !important;
            }
          }
        }
      }
    }
  }

  &.wrapper-prompt {
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 15px;

    &::before,
    &::after {
      content: unset;
    }

    .prompt {
      @include usePrimaryModalStyle;
      max-width: 420px;

      >* {
        padding: 0;
        border: 0;

        &.copy {
          margin-bottom: 20px;

          h2.title {
            @include heading3(true);
            color: $textColor01 !important;
            text-align: center;
          }

          p.message {
            @include paragraph2(true);
            margin-bottom: 0;
            text-align: center;
          }
        }

        &.nav-actions {
          ul {
            display: flex;
            align-items: center;
            justify-content: center;

            .nav-item {
              margin: 0;

              &:not(:last-child) {
                margin-right: 15px;
              }

              .action-primary {
                @include useGrvPrimaryDarkButtonStyleLarge(true);
                min-width: 120px !important;
              }

              .action-secondary {
                @include useGrvPrimaryLightButtonStyleLarge(true);
                min-width: 120px !important;
              }
            }
          }
        }
      }
    }
  }
}

.paragon__modal {
  background: rgba(0, 0, 0, 0.5);
  align-items: center;
  justify-content: center;
  padding: 15px;

  &.paragon__modal-open {
    display: flex;

    &:focus {
      .paragon__modal-dialog {
        box-shadow: none;
      }
    }
  }

  .paragon__modal-dialog {
      @include usePrimaryModalStyle;
  }
}

.proctor-modal {
  position: fixed;
  width: unset;
  height: unset;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%);

  >#modalCloseButton {
    top: 10px !important;
    right: 15px !important;
    height: 12px !important;
    width: 12px !important;
    background: none !important;
    font-size: 23px;
    line-height: 1;
    display: block;
    color: $textColor01;
    @include useFont1;

    &::before {
      content: '×';
    }

    @include whenHoverOnly {
      color: $primaryColor1;
    }
  }

  >.modal {
    height: unset !important;
    @include usePrimaryModalStyle;

    >* {
      padding: 0 !important;
      border: 0 !important;

      &.modal-header {
        @include heading3;
        margin-bottom: 30px;
        justify-content: center;
        color: $textColor01 !important;
      }
    }
  }
}

.wmd-prompt-dialog {
  margin-top: 0 !important;
  margin-left: 0 !important;
  @include usePrimaryModalStyle;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;

  #editor-dialog-title {
    @include heading3;
    color: $textColor01 !important;
    text-align: center;
  }
}

body {
  >.modal:not(.fec-modal) {
    top: 50% !important;
    bottom: unset;
    transform: translate(-50%, -50%);
    margin-left: 0 !important;

    &#discussion-alert {
      max-width: 400px;
    }

    >.inner-wrapper {
      @include usePrimaryModalStyle;
      text-align: center;

      hr {
        display: none;
      }

      >header {
        padding: 0;
        margin: 0;

        h2 {
          @include heading3;
          color: $textColor01 !important;
        }

        &~.btn.dismiss {
          @include useGrvPrimaryDarkButtonStyleLarge;
          min-width: 140px !important;
        }
      }

      >p {
        @include paragraph2;
        text-align: center;
        margin-bottom: 20px;
      }
    }
  }

  >#lean_overlay {
    background-image: none !important;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1000;
  }

  #root.SFE {
    .modal-backdrop {
      z-index: 1062;
    }

    .modal.modal-dialog {
      z-index: 1063;
    }
  }
}
